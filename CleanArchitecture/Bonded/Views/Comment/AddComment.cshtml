@model int
<!-- List of users passed from the ViewComponent -->

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link href="~/css/site.css" type="text/css" rel="stylesheet" />
    <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons/font/bootstrap-icons.css" rel="stylesheet">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet">
    <title>Add Comment</title>
    <style>
        html, body {
            height: 100%;
            margin: 0;
            padding: 0;
            display: flex;
            flex-direction: column;
            background-color: whitesmoke;
        }

        .main-container {
            display: flex;
            flex: 1; /* Take all remaining space */ 
            justify-content: center;
            align-items: center; /* Center the profile container */
            padding: 20px;
            
        }

        footer {
            text-align: center;
            width: 100%;
            position: relative;
            margin-top: auto; /* This ensures the footer stays at the bottom */
        }

        .profile-container {
            margin-top: 80px;
            margin-bottom: 80px;
            margin-left: 30px;
            margin-right: 30px;
            width: 600px;
            padding: 30px;
            background-color: #fff;
             border-radius: 5px;
            box-shadow: 0px 2px 2px 2px rgba(0, 0, 0, 0.1);
            /* box-shadow: 0 3px 4px rgba(0, 0, 0, 0.4); */
        }

        .profile-picture {
            width: 100px;
            height: 100px;
            border-radius: 50%;
            object-fit: cover;
            margin-bottom: 15px;
        }

        h3 {
            font-weight: bold;
            color: #444;
            text-align: center;
        }

        .post-btn {
            display: flex;
            justify-content: center;
            color: #fff;
            font-weight: bold;
            border-radius: 5px;
        }

            .post-btn:hover {
                background-color: #004080;
                color: #fff;
                transform: scale(1.05);
            }

        .btn-dark {
            background-color: #000;
            color: #fff;
            font-weight: bold;
            border-radius: 10px;
        }

            .btn-dark:hover {
                background-color: #004080;
                color: white;
                transform: scale(1.05);
            }

        .header-actions {
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        .scrollable-comments {
            max-height: 300px; /* Adjust height as needed */
            overflow-y: auto;
            padding: 10px;
            margin-bottom: 20px;
            border: 1px solid #ddd;
            border-radius: 8px;
            background-color: #f9f9f9;
        }

    </style>
</head>
<body>
    <div class="main-container">
        <div class="container profile-container">
            <div class="header-actions">
                <!-- Left side: Arrow -->
                <form method="get" action="@Url.Action("ViewPost", "Post")">
                    <a href="/Post/ViewPost?id=@ViewBag.PostId" class="btn rounded-4" style="color:black;font-size:large"><b><i class="bi bi-arrow-left"></i></b></a>
                </form>
                <h3 class="text-center fw-bold flex-grow-1" style="color: dimgrey; margin: 0;">Write a Comment</h3>
            </div>
            <form method="post" action="/Comment/AddComment">
                <!-- Hidden field for PostId -->
                <input type="hidden" id="PostId" name="postId" value="@ViewBag.PostId" />
                @* <div id="comments-section"> *@
                @*     @await Component.InvokeAsync("ShowCommentDetails", ViewBag.PostId) *@
                @* </div> *@
                <div class="scrollable-comments" id="comments-section">
                    @await Component.InvokeAsync("ShowCommentDetails", ViewBag.PostId)
                </div>


                <!-- Comment Content -->
                <div class="form-group mt-3">
                    <label for="Content "><b>Comment</b></label>
                    <textarea class="form-control" id="Content" name="content" required></textarea>
                    @if (ViewData.ModelState["content"]?.Errors.Count > 0)
                    {
                        <span class="text-danger">@ViewData.ModelState["content"].Errors[0].ErrorMessage</span>
                    }
                </div>
                <div style="display: flex; justify-content: center; width: 100%;">

                    <!-- Submit Button -->
                    <div class="mt-4" style="width: 100%; text-align: center;">
                        <button type="submit" class="btn post-btn btn-dark rounded-4" style="width: 100%;">Post Comment</button>
                    </div>
                </div>

               

            </form>
        </div>
    </div>


    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script>
        $(document).ready(function () {
            $("form").on("submit", function (e) {
                e.preventDefault();

                const formData = $(this).serialize();
                const postId = $("#PostId").val();

                $.ajax({
                    url: `/Comment/AddComment`,
                    type: "POST",
                    data: formData,
                    success: function (response) {
                        $("#comments-section").html(response);
                        $("#Content").val(""); // Clear the comment input
                    },
                    error: function (xhr) {
                        alert(xhr.responseJSON.message || "An error occurred.");
                    }
                });
            });
        });
                $(document).ready(function () {
            // Handle delete comment click
            $(document).on('click', '.delete-comment-btn', function () {
                const commentId = $(this).data("commentid"); // Get the comment ID
                const postId = $(this).data("postid"); // Get the post ID

                if (confirm("Are you sure you want to delete this comment?")) {
                    $.ajax({
                        url: '/Comment/DeleteComment', // URL for deleting comment
                        type: 'POST',
                        data: { CommentId: commentId, PostId: postId },
                        success: function (response) {
                            if (response.success) {
                                // Optionally, you can remove the comment from the UI without reloading
                                $(`[data-commentid=${commentId}]`).closest('.search-result-item').remove();
                            } else {
                                alert("Failed to delete comment: " + response.message);
                            }
                        },
                        error: function () {
                            alert("An error occurred while deleting the comment.");
                        }
                    });
                }
            });
        });

    </script>
   
</body>
</html>
