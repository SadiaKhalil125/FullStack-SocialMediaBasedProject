@model Bonded.Models.ViewModels.UserViewModel

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@Model.Username | Profile</title>
    <link href="css/site.css" rel="stylesheet">
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;500;700&family=Poppins:wght@600&display=swap" rel="stylesheet">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons/font/bootstrap-icons.css" rel="stylesheet">
    <style>
        footer {
            text-align: center;
            position: relative;
            bottom: 0;
            width: 100%;
        }
        body {
            background-color: #fafafa;
            color: #262626;
            font-family: 'Roboto', sans-serif;
        }

        .profile-container {
            max-width: 935px;
            margin: 80px auto 40px;
            padding: 0 20px;
        }

        .profile-header {
            display: flex;
            margin-bottom: 40px;
        }

        .profile-picture {
            width: 150px;
            height: 150px;
            border-radius: 50%;
            object-fit: cover;
            margin-left: 50px;
            border: 1px solid #e6e6e6;
        }

        .profile-info {
            margin-left: 90px;
            flex: 1;
            display: flex;
            flex-direction: column;
            align-items: flex-start;
        }

        .profile-username {
            display: flex;
            align-items: center;
            margin-bottom: 20px;
            font-family: 'Poppins', sans-serif;
            font-weight: 600;
        }

            .profile-username h2 {
                font-size: 28px;
                margin-right: 20px;
                margin-bottom: 0;
            }

        .profile-stats {
            display: flex;
            margin-bottom: 20px;
        }

        .profile-stat {
            margin-right: 30px;
            font-size: 16px;
        }

            .profile-stat strong {
                font-weight: 600;
            }

        .profile-bio {
            margin-bottom: 20px;
            width: 100%;
        }

            .profile-bio p {
                margin-bottom: 5px;
                text-align: left;
            }

        .btn-custom {
            /* background-color: #000; */
            color: #000;
            font-weight: 600;
            /* padding: 5px 15px; */
            border-radius: 4px;
            border: none;
            transition: all 0.2s;
        }

            .btn-custom:hover {
                background-color: #333;
                color: #fff;
                transform: scale(1.05);
            }

        .btn-danger {
            background-color: #dc3545;
            color: #fff; 
            font-weight: 600;
            /* padding: 5px 15px; */
            border-radius: 4px;
            border: none;
            transition: all 0.2s;
        }

            .btn-danger:hover {
                background-color: #c82333;
                color: #fff;
                transform: scale(1.05);
            }

        .profile-tabs {
            border-top: 1px solid #dbdbdb;
            display: flex;
            justify-content: center;
            margin-bottom: 0;
        }

        .tab {
            height: 52px;
            display: flex;
            align-items: center;
            margin-right: 60px;
            font-size: 12px;
            font-weight: 600;
            color: #8e8e8e;
            text-transform: uppercase;
            letter-spacing: 1px;
            cursor: pointer;
        }

            .tab:last-child {
                margin-right: 0;
            }

            .tab.active {
                color: #262626;
                border-top: 1px solid #262626;
                margin-top: -1px;
            }

            .tab i {
                margin-right: 6px;
                font-size: 16px;
            }

        .posts-grid {
            display: grid;
            grid-template-columns: repeat(3, 1fr);
            gap: 20px;
            margin-top: 40px;
        }

        .post {
            aspect-ratio: 1/1;
            background-color: #efefef;
            position: relative;
        }

            .post img {
                width: 100%;
                height: 100%;
                object-fit: cover;
            }

        .message-btn {
            background-color: #000;
            color: #fff;
            padding: 8px 20px;
            border-radius: 4px;
            text-decoration: none;
            display: inline-block;
            margin-bottom: 20px;
            transition: all 0.2s;
        }

            .message-btn:hover {
                background-color: #333;
                color: #fff;
                transform: scale(1.05);
            }

        .error-message {
            color: darkred;
            background-color: ghostwhite;
            padding: 10px;
            border-radius: 4px;
            font-weight: bold;
            text-align: center;
            margin-bottom: 20px;
        }

        /* Responsive adjustments */
       
    </style>
</head>
<body>
    <div class="profile-container">
        @if (TempData["ErrorMessage"] != null)
        {
            <div class="error-message">@TempData["ErrorMessage"]</div>
        }

        <!-- Profile Header -->
        <div class="profile-header">
            <img src="@Model.ProfilePicture" alt="Profile Picture" class="profile-picture">

            <div class="profile-info">
                <div class="profile-username">
                    <h2>@Model.Username</h2>
                </div>

                <!-- Message Button -->
                <a class="message-btn" href="/Chat/ChatView?receiverId=@Model.Id">
                    Message <i class="bi bi-chat-left-heart-fill"></i>
                </a>

                <div class="profile-stats">
                    <div class="profile-stat mt-1">
                        <a style="text-decoration:none; color:black" href="@Url.Action("ShowFollower", "Follow", new { userId = @Model.Id })">
                            <strong id="follower-count">@Model.FollowerCount</strong> followers
                        </a>
                    </div>
                    <div class="profile-stat">
                        <button class="btn @((Model.IsFollowing) ? "btn-danger" : "btn-custom") toggle-follow"
                                data-follower-id="@ViewData["CurrentUserId"]"
                                data-following-id="@Model.Id">
                            @if (Model.IsFollowing)
                            {
                                <text>Followed <i class="bi bi-heart-fill"></i></text>
                            }
                            else
                            {
                                <text>Follow <i class="bi bi-heart"></i></text>
                            }
                        </button>
                    </div>
                    
                    <div class="profile-stat mt-1">
                        <a style="text-decoration:none; color:black" href="@Url.Action("ShowFollowing", "Follow", new { userId = @Model.Id })">
                            <strong>@Model.FollowingCount</strong> following
                        </a>
                    </div>
                </div>

                <div class="profile-bio">
                    <p>@Model.Bio</p>
                </div>
            </div>
        </div>

        <div class="profile-tabs">
            <div class="tab active">
                <i class="bi bi-grid"></i>
                Posts
            </div>
        </div>

        <!-- Posts Grid -->
        <div class="posts-grid">
            @await Component.InvokeAsync("ShowOtherPost", @Model.Id)
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script>
        $(document).on("click", ".toggle-follow", function (e) {
            e.preventDefault();

            var button = $(this);
            var followerId = button.data("follower-id");
            var followingId = button.data("following-id");

            $.ajax({
                url: '/Follow/ToggleFollow',
                type: 'POST',
                data: {
                    followerId: followerId,
                    followingId: followingId
                },
                success: function (response) {
                    if (response.success) {
                        // Update button text and style
                        if (response.isFollowing) {
                            button.removeClass("btn-custom").addClass("btn-danger").html('Followed <i class="bi bi-heart-fill"></i>');
                        } else {
                            button.removeClass("btn-danger").addClass("btn-custom").html('Follow <i class="bi bi-heart"></i>');
                        }

                        // Update follower count
                        $("#follower-count").text(response.followerCount);
                    } else {
                        alert(response.message || "An error occurred.");
                    }
                },
                error: function () {
                    alert("Failed to update follow status. Please try again.");
                }
            });
        });
    </script>
</body>
</html>